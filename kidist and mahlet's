
#include <iostream>
#include <string>
#include <iomanip>
#include <fstream>
#include <windows.h>


using namespace std;

int totalRegAmount;
int amount;



//
// structure sector
//
struct movie{

    string title, genre,director, playtime;
    float rating;

    }showmov[1000]= {{"Soul","Family","Pete Docter","3 AM",8.1},
                 {"Little Women","Drama","Greta Gerwig","3 AM",7.8},
                {"The Irishman","Crime","Martin Scorsese","4 AM",7.8},
                     {"Cruella","Family","Craig Gillespie","5 AM",7.4},
					 {"Black Widow","Action","Cate Shortland","5 AM",6.8},
					 {"Luca","Adventure","Enrico Casarosa","6 AM",7.5},
                     {"Emma","Drama","Jim O'Hanlon","6 AM",6.7},
					 {"The White Tiger","Drama","Martin Sorensen","7 AM",7.1},
					 {"Herself","Drama","Keanu Ferguson","9 AM",7.0},
					 {"Annette","Musical","Lois Christenson","11 AM",6.5}};

struct tickets{
	string name;
	char seatingclass;
	int amountofpeople, seatingposition;
	double price;
};

struct beverage{
	char food[50], ingridients[100], type[10];
	          //beverage definition at the time of declaration.
}showmeal[1000]={{"burger","Bun,Beef,Chesse,Onion,lettuce,tomato,jalï¿½peno","Fast food"},
             {"Taco","Chapai,Beef,Chicken,Garlic sause,onion","Fast food"},
			 {"Pizza","cheese,Peperroni,Beef,Olive,Tomato,onion","Fast food"},
			 {"Shawarma","pita bread,beef/chicken,jalepeno,cream sauce","Fast food"},
			 {"Caramel Popcorn","popcorn,caramel","snack"},
			 {"Coca-Cola","-","Drink"},
			 {"Fanta","-","Drink"}};

                struct caddress{
          string email;
            int phone;

           };

struct cinfo{
    string name, username, password;
    int age;
    caddress adinfo;
};


cinfo info[100];
cinfo ccinfo[100];

int regAmount;



//
// Functions start here
//

inline void showmovies(movie show[], int y);
inline void showticket(tickets tik[], int m);
inline void showbev(beverage order[], int z);
inline void ticketing();
inline int deleteBeverage(beverage order[], int z);
void c_signup();
void movReg();
void showRegMov();
inline void delMov();
void custmenu();
void c_accept_login();
void a_accept_login();
void a_mainmenu();
void mainmenu();


int main(){
    

    mainmenu();
}



  inline void showmovies(movie show[], int y){//function to display the movie list.
            cout<<"\t--- Available Movies ---"<<endl;
            cout<<"Title"<<setw(10)<<"Genre"<<setw(10);
            cout<<"Director"<<setw(10)<<"Playtime"<<setw(10)<<"Rating"<<endl;
            for(int i=0; i<y; i++){
                cout<<"\n"<<i+1<<". "<<(show+i)->title<<setw(10)<<(show+i)->genre;
                cout<<"\t\t"<<(show+i)->director<<setw(10)<<(show+i)->playtime;
                cout<<setw(10)<<(show+i)->rating<<endl;
            }
}
inline void showticket(tickets tik[], int m){//function to reserve seat.
	for (int i=0;i<m;i++){
		system("CLS");
		cout<<tik[i].name<<"||"<<setw(10)<<tik[i].seatingclass<<"||"<<setw(10)<<tik[i].seatingposition<<"||"<<
		setw(10)<<tik[i].price<<endl;
	}
}
inline void showbev(beverage order[], int z){//function to display the snack list
	system("CLS");
	cout<<"\t--- Available Beverage Items --- "<<endl;
	cout<<"Name"<<setw(10)<<"Type"<<"\t\t\t"<<"Ingridients"<<endl;
	for(int i=0; i<z; i++){
		cout<<"\n"<<i+1<<". "<<order[i].food<<"||"<<setw(10)<<order[i].type<<"||";
		cout<<"\t\t\t"<<order[i].ingridients<<endl;
	}
}
void ticketing() {//a function that allows you to book a ticket according to your preferance.

       tickets book[100];
       int i;
       int k,startNumBev = 7;
       beverage meal[k];

       cout<<"-------Tickets--------"<<endl;
						cout<<"How many tickets do you want to buy? "<<endl;
						int x;
						cin>>x;
						for (int i=0; i<x; i++){
                        cout<<"\t\tEnter your name: "<<endl;
                        cin.ignore();
                        getline(cin>>ws, book[i].name);
						cout<<"\t\tChoose a movie: "<<endl;

						showmovies(showmov, 10);
						cout<<"\t\tEnter the corresponding number for the movie: ";
						int j;
						cin>>j;

						switch(j){
							case 1:
                                system("CLS");
                                cout<<showmov[0].title<<" "<<showmov[0].genre<<" "<<showmov[0].director<<" "<<showmov[0].playtime<<" ";
                                cout<<" "<<showmov[0].rating<<endl;
                                break;
						case 2:
                                system("CLS");
                                cout<<showmov[1].title<<" "<<showmov[1].genre<<" "<<showmov[1].director<<" "<<showmov[1].playtime<<" ";
                                cout<<" "<<showmov[1].rating<<endl;
                                break;
						case 3:
                                system("CLS");
                                cout<<showmov[2].title<<" "<<showmov[2].genre<<" "<<showmov[2].director<<" "<<showmov[2].playtime<<" ";
                                cout<<" "<<showmov[2].rating<<endl;
                                break;
						case 4:
                                system("CLS");
                                cout<<showmov[3].title<<" "<<showmov[3].genre<<" "<<showmov[3].director<<" "<<showmov[3].playtime<<" ";
                                cout<<" "<<showmov[3].rating<<endl;
						break;
						case 5:
                                system("CLS");
                                cout<<showmov[4].title<<" "<<showmov[4].genre<<" "<<showmov[4].director<<" "<<showmov[4].playtime<<" ";
                                cout<<" "<<showmov[4].rating<<endl;
						break;
						case 6:
                                system("CLS");
                                cout<<showmov[5].title<<" "<<showmov[5].genre<<" "<<showmov[5].director<<" "<<showmov[5].playtime<<" ";
                                cout<<" "<<showmov[5].rating<<endl;
						break;
						case 7:
                                system("CLS");
                                cout<<showmov[6].title<<" "<<showmov[6].genre<<" "<<showmov[6].director<<" "<<showmov[6].playtime<<" ";
                                cout<<" "<<showmov[6].rating<<endl;
						break;
						case 8:
                                system("CLS");
                                cout<<showmov[7].title<<" "<<showmov[7].genre<<" "<<showmov[7].director<<" "<<showmov[7].playtime<<" ";
                                cout<<" "<<showmov[7].rating<<endl;
						break;
						case 9:
                                system("CLS");
                                cout<<showmov[8].title<<" "<<showmov[8].genre<<" "<<showmov[8].director<<" "<<showmov[8].playtime<<" ";
                                cout<<" "<<showmov[8].rating<<endl;
						break;
						case 10:
                                system("CLS");
                                cout<<showmov[9].title<<" "<<showmov[9].genre<<" "<<showmov[9].director<<" "<<showmov[9].playtime<<" ";
                                cout<<" "<<showmov[9].rating<<endl;
						default:
                                cout<<"invalid choice";


                          }

                        system("CLS");
						cout<<"\t\tChoose your seating class: "<<endl;
						cout<<"\t\t_____________________________________"<<endl;
						cout<<"\t\t\t[1]. Normal -- regular seating"<<endl;
						cout<<"\t\t\t[2]. VIP -- improved chairs + free meals"<<endl;
						cout<<"\t\t\t[3]. Gold --- premium seating + free meals"<<endl;

						cout<<"\t\t\tPrices are 100, 200 and 300 respectively"<<endl;
						int seats;
						cin>>seats;

						cout<<"\t\tChoose your Beverage: ";
						showbev(showmeal, startNumBev);//edited
						int l;
						cout<<"\t\tchoose your Beverage: "<<endl;
						cout<<"\t\tEnter the corresponding number: ";
						cin>>l;
						cout<<meal[l].food<<setw(10)<<meal[l].type;
						cout<<setw(10)<<meal[l].ingridients<<endl;
                          switch(seats){
						case 1:

							//system("clear");
							system("CLS");
							cout<<"\t\t\t---Ticket---"<<endl;
							cout<<"\t\tMOVIE: "<<showmov[j-1].title<<endl;
							cout<<"\t\tCLASS: Normal"<<endl;
							cout<<"\t\tBEVERAGE: "<<meal[l-1].food<<endl;
							cout<<"\t\tPrice: 150(including meals)"<<endl;
						    cout<<"\t\t---ENJOY YOUR MOVIE!---"<<endl;
							 system("PAUSE");


							 break;

						case 2:
							//system("clear");
							system("CLS");
							cout<<"\t\t\t---Ticket---"<<endl;
							cout<<"\t\tMOVIE: "<<showmov[j-1].title<<endl;
							cout<<"\t\tCLASS: VIP"<<endl;
							cout<<"\t\tBEVERAGE: "<<meal[l-1].food<<endl;
							cout<<"\t\tPrice: 300(including meal)"<<endl;
							cout<<"\t\t---ENJOY YOUR MOVIE!---"<<endl;
							break;
						system("PAUSE");


						 case 3:
							//system("clear");
							system("CLS");
							cout<<"\t\t\t---Ticket---"<<endl;
							cout<<"\t\tMOVIE: "<<showmov[j-1].title<<endl;
							cout<<"\t\tCLASS: Gold"<<endl;
							cout<<"\t\tBEVERAGE: "<<meal[l-1].food<<endl;
							cout<<"\t\tPrice: 450(including meal)"<<endl;
							cout<<"\t\t---ENJOY YOUR MOVIE!---"<<endl;
						system("PAUSE");
   }
                        }
   }
/*
inline int deleteMovie(movie show[], int y){//function to delete a movie.
	string name;
	int i=0;
	system("CLS");
	cout<<"\t--- Delete Movie ---"<<endl;
	cout<<"enter the name of the movie"<<endl;
	cin>>name;
	for(i=0; i<y; i++){
		if((show+i)->title == name){
			for(int k = i + 1 ; k<y; k++){
				show[i] = show[k];
			}
			cout<<"Movie was deleted\n";
			y--;
			break;
		}else{
			continue;
		}
	}
	if(i==y){
		cout<<"Movie not found\n";
	}
	return y;
} */

inline int deleteBeverage(beverage order[], int z){//function to delete a snack.
	system("CLS");
	string name;
	int i=0;
	cout<<"\t--- Delete Beverage ---"<<endl;
	cout<<"enter the name of the beverage"<<endl;
	cin>>name;
	for(i=0; i<z; i++){
		if((order[i].food) == name){
			for(int k = i + 1 ; k<z; k++){
				order[i] = order[k];
			}
			cout<<"Beverage was deleted\n";
			z--;
			break;
		}else{
			continue;
		}
	}
	if(i==z){
			cout<<"Beverage not found\n";
		}
		return z;
}




void c_signup(){//the customer signup function

    string username, password, name, email;
    int age, phone;

    system("CLS");
 ofstream ofile(username + ".csv", ios::out|ios::app);
   if (!ofile){
       cout<<"file creation failed! ";
   } 
   else { 
     
    cout<<"\t\t\tUsername: ";
    getline(cin>>ws, username);

   ofile<<username<<endl;

    cout<<"\t\t\tName: ";
    getline(cin>>ws, name);
    ofile<<name<<endl;

    cout<<"\t\t\tAge: ";
    cin>>age;
    ofile<<age<<endl;

    cout<<"\t\t\tPassword: ";
    getline(cin>>ws, password);
    ofile<<password<<endl;

    cout<<"\t\t\tEmail: ";
    getline(cin>>ws, email);
    ofile<<email<<endl;

    cout<<"\t\t\tPhone: ";
    cin>>phone;
    ofile<<phone<<endl;



    ofile.close();
   }


    cout<<"\t\t---Sign up process done----\t\t"<<endl;
    system("CLS");
}
